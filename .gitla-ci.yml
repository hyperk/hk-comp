# This file is a template, and might need editing before it works on your project.
# Using job token: https://docs.gitlab.com/ee/user/project/new_ci_build_permissions_model.html#job-token

########################@

image: docker:latest
services:
- docker:dind

stages:
  - build
  - test
  - release

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

include:
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  rules:
    - if: '$CODE_QUALITY_DISABLED'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"' # Run code quality job in merge request pipelines
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'      # Run code quality job in pipelines on the master branch (but not in other branch pipelines)
    - if: '$CI_COMMIT_TAG' 
  artifacts:
    paths: [gl-code-quality-report.json]
  stage: test

# Build the master branch when there is no tag
build-master:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  only:
    - master
# Additional build when a tag is made
build-tags:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  only:
    - tags

# Steps for the merge request
build-mr:
  stage: build
  script:
    - docker build --pull  -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  only:
    - merge_requests

test:
  stage: test
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker run "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" bash -c 'source $COMMON_BUILD_PREFIX/setup.sh && source ../bin/setup.sh && nd280-validate --apply'
  only:
    - merge_requests
    - master
    - tags

documentation:
  stage: test
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker run "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" bash -c 'source $COMMON_BUILD_PREFIX/setup.sh && source ../bin/setup.sh && make hatRecon_documentation'
  only:
    - merge_requests
    - master
    - tags

release-master:
  stage: release
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master

release-tags:
  stage: release
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
  only:
    - tags

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  #DOCKER_HOST: tcp://docker:2375
